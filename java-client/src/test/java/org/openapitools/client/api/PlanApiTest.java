/*
 * Move2Kube API
 * This is a documentation of the Move2Kube REST API. All API calls expect the `Authorization: Bearer <access-token>` HTTP header unless specified otherwise. The access token can be obtained in the same way as OAuth 2.0 using the token endpoint in the admin section. 
 *
 * The version of the OpenAPI document: v1.0.0
 * Contact: move2kube-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetPlan200Response;
import org.openapitools.client.model.UpdatePlanRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlanApi
 */
@Disabled
public class PlanApiTest {

    private final PlanApi api = new PlanApi();

    /**
     * Delete the current plan for the project.
     *
     * Delete the current plan for the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePlanTest() throws ApiException {
        String workspaceId = null;
        String projectId = null;
        api.deletePlan(workspaceId, projectId);
        // TODO: test validations
    }

    /**
     * Get the plan file.
     *
     * Get the plan file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlanTest() throws ApiException {
        String workspaceId = null;
        String projectId = null;
        GetPlan200Response response = api.getPlan(workspaceId, projectId);
        // TODO: test validations
    }

    /**
     * Start planning on this project&#39;s inputs.
     *
     * Start planning on this project&#39;s inputs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startPlanningTest() throws ApiException {
        String workspaceId = null;
        String projectId = null;
        api.startPlanning(workspaceId, projectId);
        // TODO: test validations
    }

    /**
     * Update the plan for this project.
     *
     * Update the plan for this project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePlanTest() throws ApiException {
        String workspaceId = null;
        String projectId = null;
        UpdatePlanRequest body = null;
        api.updatePlan(workspaceId, projectId, body);
        // TODO: test validations
    }

}
